{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GridGifItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","slug","images","downsized_medium","GridGifItem","cat","toUpperCase","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","role","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,SACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAkBfG,YAAY,mC,+BCzBfC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,gDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIG,KACXX,IAAG,UAAEQ,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPQ,EAAc,SAAC,GAAiC,EAA/BL,GAAgC,IAA5BC,EAA2B,EAA3BA,MAAOV,EAAoB,EAApBA,IAC/Be,EADmD,EAAfjB,SACrBkB,cACrB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKlB,EAAKmB,IAAKT,IACpB,4BAAIK,QCHHK,EAAU,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAC/BsB,KAAM,GACNgB,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAW,WAEP3B,EAASC,GACJ2B,MAAM,SAAAC,GACHH,EAAS,CACLlB,KAAMqB,EACNL,SAAS,SAItB,CAAEvB,IAGEwB,EDlBwBK,CAAc7B,GAAjCc,EAFyB,EAE9BP,KAAagB,EAFiB,EAEjBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDnB,IACnD,uBACEuB,GACE,qBAAKJ,UAAU,gCAAf,SACI,qBAAKA,UAAU,iBAAiBW,KAAK,SAArC,SACI,sBAAMX,UAAU,kBAAhB,4BAIZ,qBAAKA,UAAU,YAAf,SACML,EAAOL,KAAK,SAAEC,GAAF,OACN,cAAC,EAAD,aAAaV,SAAUA,GAA4BU,GAAbA,EAAIC,aEjBrDoB,EAAe,WAAO,IAAD,EAEM9C,mBAAS,CAAC,QAFhB,mBAEvB+C,EAFuB,KAEXhD,EAFW,KAI9B,OACI,sBAAKmC,UAAU,YAAf,UACI,uBACA,6CACA,cAAC,EAAD,CAAanC,cAAgBA,IAC7B,uBACA,6BACMgD,EAAWvB,KAAK,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAWA,GAArBA,QAGtB,2B,YCVZiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.bcec77bf.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 1 ) {\n            setCategories( cats => [ inputValue, ...cats ] )\n            setInputValue('')\n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type='search'\n                value={ inputValue }\n                onChange={ handleInputChange }\n                placeholder=' Search your favorites gifs'\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n\n","\nexport const getGifs = async( category ) => {\n\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=DOqrXRhbCQJBWGmPifIGxrdL5fF1l4eE`\n    const resp = await fetch( url )\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.slug,\n            url: img.images?.downsized_medium.url,\n        }\n    })\n\n    return gifs\n    \n\n}","import React from 'react'\n\nexport const GridGifItem = ({ id, title, url, category }) => {\n    const cat = category.toUpperCase()\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={url} alt={title} />\n            <p>{cat}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GridGifItem } from './GridGifItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const {data:images, loading} = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n            <br/>\n            { loading && \n                <div className=\"d-flex justify-content-center\">\n                    <div className=\"spinner-border\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                </div>\n            }\n            <div className=\"card-grid\">\n                { images.map( ( img ) => (\n                        <GridGifItem category={category} key={img.id} { ...img } />))\n                    }\n\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect( () => {\n        \n        getGifs( category )\n            .then( imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false\n                })\n            })\n\n    }, [ category ]);\n    \n\n    return state; // {data: [], loading: true};\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Gif'])\n\n    return (\n        <div className=\"container\">\n            <br/>\n            <h1>Gif Browser</h1>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n            <ol>\n                { categories.map( (category) => (\n                    <GifGrid key={category} category={ category } />))\n                }\n            </ol>\n            <br/>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}